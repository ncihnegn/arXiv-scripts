#!/usr/bin/env python
"""script to download from arXiv and build PDF"""

import os
import platform
import re
import tarfile
from random import choice
from subprocess import Popen

import filetype

from scriptine import path, run
from scriptine.shell import call

file = ""

def download_command(tag):
    """Download"""
    url = 'https://arxiv.org/e-print/' + tag
    file = tag + '.tar.gz'
    call(['curl', '-o', file, url])

def extract_command(tag):
    """Extract"""
    gzip = tag + '.tar.gz'
    kind = filetype.guess(gzip)
    if kind.extension == 'pdf':
        os.rename(gzip, tag + '.' + kind.extension)
        return
    if path(gzip).isfile():
        call(['gzip', '-df', gzip])
    directory = path(tag)
    directory.ensure_dir()
    tar = tag + '.tar'
    if tarfile.is_tarfile(tar):
        call(['tar', 'xf', tar, '-C', tag])
    elif path(tar).isfile():
        os.rename(tar, tag + '/' + directory.basename() + '.tex')

def find_main(tag):
    """Find the main tex file"""
    results = []
    directory = path(tag)
    with directory.as_working_dir():
        for texfile in path.cwd().files('*.tex'):
            if re.search('^\\s*\\\\documentclass', path(texfile).text(), re.MULTILINE):
                results.append(texfile)
    if results == []:
        raise Exception("Can't find the main tex file in " + tag)
    return choice(results)

def compile_command(tag):
    """Run LaTeX"""
    global file

    directory = path(tag)
    missfont = 'missfont.log'

    if file == "":
        file = find_main(tag)
    with directory.as_working_dir():
        call(['texliveonfly', file])
        if path(missfont).isfile():
            os.remove(missfont)
        call(['pdflatex', '-shell-escape', file])
        log = file.replace('.tex', '.log')
        while 'Rerun to' in path(log).text():
            call(['pdflatex', '-shell-escape', file])
        if path(missfont).isfile():
            with open(missfont, 'r') as fin:
                print(fin.read())

def view_command(tag):
    """Open the main PDF file"""
    global file
    directory = path(tag)
    pdf = tag + '.pdf'
    if file == "":
        file = find_main(tag)
    with directory.as_working_dir():
        pdf = file.replace('.tex', '.pdf')
    view(pdf)

def view(pdf):
    """Open PDF file"""
    if platform.system() == 'Darwin':
        call(['open', pdf])
    if platform.system() == 'Windows':
        Popen(['sumatrapdf', pdf])
    if platform.system() == 'Linux':
        Popen(['zathura', pdf])

def batch_command(tag):
    """Batch"""
    global file
    if not path(tag + '.pdf').isfile():
        # if not (path(tag).isdir() or path(tag + '.tar').isfile() or path(tag + '.pdf').isfile()):
        download_command(tag)
        # if not path(tag).isdir():
        extract_command(tag)
        file = find_main(tag)
        compile_command(tag)
    view_command(tag)

def all_command():
    """Compile all subdirectories"""
    global file
    for folder in os.listdir('.'):
        if path(folder).isdir() and folder[0].isdigit():
            file = find_main(folder)
            compile_command(folder)

if __name__ == '__main__':
    run()
