#!/usr/bin/env python3

import argparse
import filetype
import glob
import gzip
import os
from pathlib import Path
import platform
import re
import subprocess
import tarfile
import urllib.error
import urllib.request

def main():
    parser = argparse.ArgumentParser(description='Download and build arXiv papers.')
    parser.add_argument('tag', help='Paper tag')
    parser.add_argument('--compiler', default='pdflatex', help='Use pdflatex or xelatex')
    parser.add_argument('--forcedownload', default=False, help='Force download')
    parser.add_argument('--skipextract', default=False, help='Skip extraction')

    args = parser.parse_args()
    tag = args.tag
    compiler = args.compiler
    skipextract = args.skipextract
    forcedownload = args.forcedownload

    if compiler.endswith('latex'):
        source = "latex"
    else:
        source = "plain"

    os.makedirs(tag, exist_ok=True)
    os.chdir(tag)
    # Download sources
    url = 'https://arxiv.org/e-print/' + tag
    archive = tag.split('/')[0]

    if not os.path.exists(archive) or forcedownload:
        try:
            urllib.request.urlretrieve(url, archive)
        except urllib.error.URLError as e:
            print(e, url)
            exit(-1)

    # Extract
    pdf = archive + '.pdf'
    if not skipextract:
        file_type = filetype.guess(archive)
        if file_type.extension == 'pdf':
            os.rename(archive, pdf)
            source = 'pdf'
        if file_type.extension == 'ps':
            ps = archive + '.ps'
            os.rename(archive, ps)
            subprocess.run(['ps2pdf', ps])
            source = 'ps'
        if file_type.extension == 'gz':
            if tarfile.is_tarfile(archive):
                tar = tarfile.open(archive)
                tar.extractall()
                tar.close()
            else:
                subprocess.run(['gunzip', '-N', archive])

        results = []
        if source == "latex":
            # Find the main file
            for file in glob.glob("*.tex"):
                if re.search('^\\s*\\\\documentclass', Path(file).read_text(errors='ignore'), re.MULTILINE):
                    results.append(file)
            if results == []:
                raise Exception("Can't find the main TeX file", glob.glob("*.tex"))
        else:
            results = glob.glob("*.tex")

        main = results[0]

        # Build
        subprocess.run(["texliveonfly", "-c", compiler, main])
        subprocess.run([compiler, "-shell-escape", main])
        log = main.replace('.tex', '.log')
        while 'Rerun to' in Path(log).read_text():
            subprocess.run([compiler, "-shell-escape", main])
        pdf = main.replace('.tex', '.pdf')

    if platform.system() == 'Darwin':
        subprocess.run(["open", pdf])
    if platform.system() == 'Windows':
        subprocess.run([pdf])
    if platform.system() == 'Linux':
        subprocess.run(["open", pdf])

if __name__ == '__main__':
    main()
